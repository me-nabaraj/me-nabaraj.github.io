document.addEventListener('DOMContentLoaded', () => {
    const database = window.database || firebase.database();
    const urlParams = new URLSearchParams(window.location.search);
    const classId = urlParams.get('class');
    
    if (!classId) {
        window.location.href = 'index.html';
        return;
    }

    database.ref('publicClasses/' + classId).once('value')
        .then((publicSnapshot) => {
            if (publicSnapshot.val() !== true) {
                throw new Error('CLASS_PRIVATE');
            }
            return database.ref(`classes/${classId}/name`).once('value');
        })
        .then((classSnapshot) => {
            const className = classSnapshot.val() || `Class ${classId.replace('class', '')}`;
            document.getElementById('class-name').textContent = className;
            return database.ref(`classes/${classId}/students`).once('value');
        })
        .then((studentsSnapshot) => {
            const students = studentsSnapshot.val() || {};
            const container = document.getElementById('stars-container');
            container.innerHTML = '';
            
            // Convert to array and sort by star count (descending)
            const studentsArray = Object.entries(students)
                .map(([id, student]) => ({
                    id,
                    name: student.name,
                    stars: student.stars || 0,
                    starHistory: student.starHistory || {}
                }))
                .sort((a, b) => b.stars - a.stars); // Sort by stars descending

            // Create student cards in order (keeping your original card design)
            studentsArray.forEach((student) => {
                // Create star icons (now showing up to 10 stars)
                const starCount = Math.min(student.stars, 10);
                const starIcons = [];
                
                for (let i = 0; i < 10; i++) {
                    if (i < starCount) {
                        starIcons.push(`
                            <svg class="h-8 w-8 text-yellow-500 star-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                            </svg>
                        `);
                    } else {
                        starIcons.push(`
                            <svg class="h-8 w-8 text-gray-200 star-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                            </svg>
                        `);
                    }
                }
                
                // Your original card HTML (unchanged except for the star count)
                container.innerHTML += `
                    <div class="bg-white rounded-xl shadow-md p-6 mb-4 star-card">
                        <h3 class="text-xl font-semibold text-center text-gray-800 mb-4">${student.name}</h3>
                        <div class="flex justify-center gap-1">
                            ${starIcons.join('')}
                        </div>
                        ${student.stars > 10 ? 
                            `<p class="text-center text-sm text-gray-500 mt-2">+${student.stars - 10} more</p>` : 
                            ''}
                    </div>
                `;
            });
        })
        .catch((error) => {
            console.error("Error:", error);
            document.getElementById('stars-container').innerHTML = `
                <div class="bg-red-50 border border-red-200 p-4 rounded-lg">
                    <p class="text-red-600">${error.message === 'CLASS_PRIVATE' 
                        ? 'This class is not available for public viewing.' 
                        : 'Error loading data: ' + error.message}</p>
                </div>
            `;
        });
});
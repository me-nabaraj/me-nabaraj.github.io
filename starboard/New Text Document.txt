{
  "rules": {
    "classes": {
      ".read": "auth != null",
      "$classId": {
        ".write": "auth != null && root.child('teachers/'+auth.uid+'/classes/'+$classId).exists()",
        "students": {
          "$studentId": {
            ".write": "auth != null && root.child('teachers/'+auth.uid+'/classes/'+$classId).exists()",
            ".validate": "
              // Allow creation with minimum required fields
              (!data.exists() && newData.hasChild('name')) ||
              // Validate full structure for updates
              (data.exists() && 
               newData.hasChildren(['name', 'stars', 'starHistory']) &&
               newData.child('name').isString() &&
               newData.child('stars').isNumber() &&
               newData.child('stars').val() >= 0)
            ",
            "name": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "stars": {
              ".validate": "newData.isNumber() && newData.val() >= 0"
            },
            "starHistory": {
              ".validate": "newData.hasChildren() || newData.val() === null",
              "$timestamp": {
                ".validate": "
                  newData.hasChildren(['change', 'teacher', 'timestamp']) &&
                  newData.child('teacher').val() === auth.uid
                "
              }
            }
          }
        }
      }
    },
    "teachers": {
      ".read": "auth != null",
      ".write": "root.child('roles/'+auth.uid).val() === 'principal'"
    },
    "roles": {
      ".read": "auth != null",
      ".write": "root.child('roles/'+auth.uid).val() === 'principal'"
    },
    "logs": {
      ".read": "auth != null",
      ".write": "auth != null"
    }
  }
}